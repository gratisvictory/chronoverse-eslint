name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  id-token: write
  contents: write
  pull-requests: write
  packages: write

concurrency: '${{ github.workflow }}-${{ github.ref }}'

jobs:
  release:
    name: Release
    if: >-
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup CI
        uses: ./.github/actions/ci-setup

      - name: Configure Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Build packages
        run: bun run build

      - name: Get package versions
        id: versions
        run: |
          bun scripts/release.js
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Configure npm for publishing
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.PUBLISH_NPM_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc

      - name: Wait for OTP
        uses: step-security/wait-for-secrets@v1
        id: wait-for-secrets
        with:
          secrets: |
            OTP:
              name: 'OTP to publish package'
              description: 'OTP from authenticator app'

      - name: Publish to npm
        run: bun run ci:release --otp ${{ steps.wait-for-secrets.outputs.OTP }}
        env:
          NODE_AUTH_TOKEN: '${{ secrets.PUBLISH_NPM_TOKEN }}'

      - name: Create GitHub Release
        uses: comnoco/create-release-action@v2.0.5
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: 'release@${{ steps.versions.outputs.version }}'
          release_name: '${{ github.event.pull_request.title }}'
          body: '${{ github.event.pull_request.body }}'
          draft: false
          prerelease: false

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Released Packages ðŸš€\n\n- **Package**: \`${process.env.PACKAGE_VERSION}\`\n`
            });
